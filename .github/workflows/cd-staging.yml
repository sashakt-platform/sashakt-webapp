name: CD Staging

on:
  push:
    branches: [ main, feature/github-actions ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Check TypeScript
        run: pnpm run check

      - name: Run linter
        run: pnpm run lint

      - name: Run unit tests
        run: pnpm run test:unit -- --run

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Run e2e tests
        run: pnpm run test:e2e

      - name: Build
        run: pnpm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build/

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/feature/github-actions'
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build/

      - name: Deploy to staging
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          pnpm install vercel
          DEPLOYMENT_URL=$(pnpm exec vercel deploy ./build --token ${VERCEL_TOKEN} --yes)
          echo "url=${DEPLOYMENT_URL}" >> "$GITHUB_OUTPUT"
